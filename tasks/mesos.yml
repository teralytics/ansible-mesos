---
# == Work Dir for replicated log
- name: create work dir
  file: path={{ mesos_work_dir }} state=directory

# == Remove default configs
- name: Remove Default Mesos Configs
  file: state=absent path=/etc/mesos/

- name: Remove Mesos ZK File
  file: state=absent path=/etc/mesos/zk

- name: Remove Default Mesos-Master Config
  file: state=absent path=/etc/mesos-master/

- name: Remove Default Mesos-Slave Config
  file: state=absent path=/etc/mesos-slave/

# == Configure and recreate
- name: Mesos default config file
  template: src=conf-mesos.j2 dest=/etc/default/mesos
  notify:
  - Restart mesos-master
  - Cleanup meta/slaves/latest
  - Restart mesos-slave

- block:
  - name: Mesos Master config file
    template: src=conf-mesos-master.j2 dest=/etc/default/mesos-master mode=0644 owner=root group=root
    notify:
    - Restart mesos-master

  - name: Mesos master upstart script
    template: src=init-mesos-master.j2 dest=/etc/init/mesos-master.conf
    when: ansible_service_mgr == "upstart"
    notify:
    - Restart mesos-master

  - name: Mesos master systemd script
    template: src=mesos-master.service.j2 dest=/etc/systemd/system/mesos-master.service
    when: ansible_service_mgr == "systemd"
    notify:
    - Reload systemd
    - Restart mesos-master

  - name: Enable mesos-master service
    service:
      name: mesos-master
      enabled: yes

  - debug:
      msg: |
        Forcing restart: {{ force_restart|bool }}
    notify:
    - Restart mesos-master
    when: force_restart|bool
  when: '"master" in mesos_install_mode'

- block:
  - name: Mesos Slave config file
    template: src=conf-mesos-slave.j2 dest=/etc/default/mesos-slave mode=0644 owner=root group=root
    notify:
    - Cleanup meta/slaves/latest
    - Restart mesos-slave

  - name: Mesos slave upstart script
    template: src=init-mesos-slave.j2 dest=/etc/init/mesos-slave.conf
    when: ansible_service_mgr == "upstart"
    notify:
    - Cleanup meta/slaves/latest
    - Restart mesos-slave

  - name: Mesos slave systemd script
    template: src=mesos-slave.service.j2 dest=/etc/systemd/system/mesos-slave.service
    when: ansible_service_mgr == "systemd"
    notify:
    - Reload systemd
    - Cleanup meta/slaves/latest
    - Restart mesos-slave

  - name: Enable mesos-slave service
    service:
      name: mesos-slave
      enabled: yes

  - debug:
      msg: |
        Forcing restart: {{ force_restart|bool }}
    notify:
    - Cleanup meta/slaves/latest
    - Restart mesos-slave
    when: force_restart|bool
  when: '"slave" in mesos_install_mode'

- name: Flush handlers
  meta: flush_handlers

- name: Start mesos-master service if it has not been started yet
  service:
    name: mesos-master
    state: started
  when: '"master" in mesos_install_mode'

- name: Start mesos-slave service if it has not been started yet
  service:
    name: mesos-slave
    state: started
  when: '"slave" in mesos_install_mode'
